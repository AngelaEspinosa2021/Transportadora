//------------------------------------------------------------------------------
// <auto-generated>
//     Este código fue generado por una herramienta.
//     Versión de runtime:4.0.30319.42000
//
//     Los cambios en este archivo podrían causar un comportamiento incorrecto y se perderán si
//     se vuelve a generar el código.
// </auto-generated>
//------------------------------------------------------------------------------

namespace TransportadoraMVC.MonedaReference {
    using System.Runtime.Serialization;
    using System;
    
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="Moneda", Namespace="http://schemas.datacontract.org/2004/07/TranspService.Modelos")]
    [System.SerializableAttribute()]
    public partial class Moneda : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string CodigoField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string DescripcionField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<System.DateTime> FechaField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private long IdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string NombreField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<decimal> ValorField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Codigo {
            get {
                return this.CodigoField;
            }
            set {
                if ((object.ReferenceEquals(this.CodigoField, value) != true)) {
                    this.CodigoField = value;
                    this.RaisePropertyChanged("Codigo");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Descripcion {
            get {
                return this.DescripcionField;
            }
            set {
                if ((object.ReferenceEquals(this.DescripcionField, value) != true)) {
                    this.DescripcionField = value;
                    this.RaisePropertyChanged("Descripcion");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<System.DateTime> Fecha {
            get {
                return this.FechaField;
            }
            set {
                if ((this.FechaField.Equals(value) != true)) {
                    this.FechaField = value;
                    this.RaisePropertyChanged("Fecha");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public long Id {
            get {
                return this.IdField;
            }
            set {
                if ((this.IdField.Equals(value) != true)) {
                    this.IdField = value;
                    this.RaisePropertyChanged("Id");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Nombre {
            get {
                return this.NombreField;
            }
            set {
                if ((object.ReferenceEquals(this.NombreField, value) != true)) {
                    this.NombreField = value;
                    this.RaisePropertyChanged("Nombre");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<decimal> Valor {
            get {
                return this.ValorField;
            }
            set {
                if ((this.ValorField.Equals(value) != true)) {
                    this.ValorField = value;
                    this.RaisePropertyChanged("Valor");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="MonedaReference.IServicioMoneda")]
    public interface IServicioMoneda {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IServicioMoneda/ListarMoneda", ReplyAction="http://tempuri.org/IServicioMoneda/ListarMonedaResponse")]
        TransportadoraMVC.MonedaReference.Moneda[] ListarMoneda();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IServicioMoneda/ListarMoneda", ReplyAction="http://tempuri.org/IServicioMoneda/ListarMonedaResponse")]
        System.Threading.Tasks.Task<TransportadoraMVC.MonedaReference.Moneda[]> ListarMonedaAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IServicioMoneda/AgregarMoneda", ReplyAction="http://tempuri.org/IServicioMoneda/AgregarMonedaResponse")]
        void AgregarMoneda(TransportadoraMVC.MonedaReference.Moneda mon);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IServicioMoneda/AgregarMoneda", ReplyAction="http://tempuri.org/IServicioMoneda/AgregarMonedaResponse")]
        System.Threading.Tasks.Task AgregarMonedaAsync(TransportadoraMVC.MonedaReference.Moneda mon);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IServicioMoneda/EditarMoneda", ReplyAction="http://tempuri.org/IServicioMoneda/EditarMonedaResponse")]
        void EditarMoneda(long Id, TransportadoraMVC.MonedaReference.Moneda mon);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IServicioMoneda/EditarMoneda", ReplyAction="http://tempuri.org/IServicioMoneda/EditarMonedaResponse")]
        System.Threading.Tasks.Task EditarMonedaAsync(long Id, TransportadoraMVC.MonedaReference.Moneda mon);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IServicioMoneda/EliminarMoneda", ReplyAction="http://tempuri.org/IServicioMoneda/EliminarMonedaResponse")]
        void EliminarMoneda(long Id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IServicioMoneda/EliminarMoneda", ReplyAction="http://tempuri.org/IServicioMoneda/EliminarMonedaResponse")]
        System.Threading.Tasks.Task EliminarMonedaAsync(long Id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IServicioMoneda/BuscarMoneda", ReplyAction="http://tempuri.org/IServicioMoneda/BuscarMonedaResponse")]
        TransportadoraMVC.MonedaReference.Moneda BuscarMoneda(long Id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IServicioMoneda/BuscarMoneda", ReplyAction="http://tempuri.org/IServicioMoneda/BuscarMonedaResponse")]
        System.Threading.Tasks.Task<TransportadoraMVC.MonedaReference.Moneda> BuscarMonedaAsync(long Id);
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface IServicioMonedaChannel : TransportadoraMVC.MonedaReference.IServicioMoneda, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class ServicioMonedaClient : System.ServiceModel.ClientBase<TransportadoraMVC.MonedaReference.IServicioMoneda>, TransportadoraMVC.MonedaReference.IServicioMoneda {
        
        public ServicioMonedaClient() {
        }
        
        public ServicioMonedaClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public ServicioMonedaClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public ServicioMonedaClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public ServicioMonedaClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public TransportadoraMVC.MonedaReference.Moneda[] ListarMoneda() {
            return base.Channel.ListarMoneda();
        }
        
        public System.Threading.Tasks.Task<TransportadoraMVC.MonedaReference.Moneda[]> ListarMonedaAsync() {
            return base.Channel.ListarMonedaAsync();
        }
        
        public void AgregarMoneda(TransportadoraMVC.MonedaReference.Moneda mon) {
            base.Channel.AgregarMoneda(mon);
        }
        
        public System.Threading.Tasks.Task AgregarMonedaAsync(TransportadoraMVC.MonedaReference.Moneda mon) {
            return base.Channel.AgregarMonedaAsync(mon);
        }
        
        public void EditarMoneda(long Id, TransportadoraMVC.MonedaReference.Moneda mon) {
            base.Channel.EditarMoneda(Id, mon);
        }
        
        public System.Threading.Tasks.Task EditarMonedaAsync(long Id, TransportadoraMVC.MonedaReference.Moneda mon) {
            return base.Channel.EditarMonedaAsync(Id, mon);
        }
        
        public void EliminarMoneda(long Id) {
            base.Channel.EliminarMoneda(Id);
        }
        
        public System.Threading.Tasks.Task EliminarMonedaAsync(long Id) {
            return base.Channel.EliminarMonedaAsync(Id);
        }
        
        public TransportadoraMVC.MonedaReference.Moneda BuscarMoneda(long Id) {
            return base.Channel.BuscarMoneda(Id);
        }
        
        public System.Threading.Tasks.Task<TransportadoraMVC.MonedaReference.Moneda> BuscarMonedaAsync(long Id) {
            return base.Channel.BuscarMonedaAsync(Id);
        }
    }
}
