@model TransportadoraMVC.ActividadReference.Actividad

@{
    ViewBag.Title = "Edit";
}

<h2>Editar Actividad</h2>


@using (Html.BeginForm())
{
    @Html.AntiForgeryToken()
    
    <div class="form-horizontal">
        <h4>Actividad</h4>
        <hr />
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
        @Html.HiddenFor(model => model.Id)

        <div class="row">
            <div class="col s6 col-md-6 fuente">
                @Html.LabelFor(model => model.CreadaPor, "Creada Por", htmlAttributes: new { @class = "control-label col-md-2" })
                @Html.DropDownList("CreadaPor", null, htmlAttributes: new { @class = "form-control" })
                @Html.ValidationMessageFor(model => model.CreadaPor, "", new { @class = "text-danger" })
            </div>
            <div class="col s6 col-md-6 fuente">
                @Html.LabelFor(model => model.AsignadaA, "Asignada A", htmlAttributes: new { @class = "control-label col-md-2" })
                @Html.DropDownList("AsignadaA", null, htmlAttributes: new { @class = "form-control" })
                @Html.ValidationMessageFor(model => model.AsignadaA, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="row">
            <div class="col s6 col-md-6 fuente">
                @Html.LabelFor(model => model.RelacionadaCon, "Relacionada Con", htmlAttributes: new { @class = "control-label col-md-2" })
                @Html.DropDownList("RelacionadaCon", null, htmlAttributes: new { @class = "form-control" })
                @Html.ValidationMessageFor(model => model.RelacionadaCon, "", new { @class = "text-danger" })
            </div>
            <div class="col s6 col-md-6 fuente">
                @Html.LabelFor(model => model.Asunto, htmlAttributes: new { @class = "control-label col-md-2" })
                @Html.EditorFor(model => model.Asunto, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Asunto, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="row">
            <div class="col s6 col-md-6 datepicker fuente">
                @Html.LabelFor(model => model.FechaVencimiento, htmlAttributes: new { @class = "control-label col-md-2" })
                @Html.EditorFor(model => model.FechaVencimiento, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.FechaVencimiento, "", new { @class = "text-danger" })
            </div>
            <div class="col s6 col-md-6 input-field fuente">
                @Html.LabelFor(model => model.Observacion, htmlAttributes: new { @class = "control-label col-md-2" })
                @Html.EditorFor(model => model.Observacion, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Observacion, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="row">
            <div class="col s6 col-md-6 input-field fuente">
                @Html.LabelFor(model => model.Estado, htmlAttributes: new { @class = "control-label col-md-2" })
                @Html.EditorFor(model => model.Estado, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Estado, "", new { @class = "text-danger" })
            </div>
            <div class="col s6 col-md-6 input-field fuente">
                @Html.LabelFor(model => model.Prioridad, htmlAttributes: new { @class = "control-label col-md-2" })
                @Html.EditorFor(model => model.Prioridad, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Prioridad, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group fuente">
            <div class="col-md-offset-2 col-md-10">
                <input type="submit" value="Guardar" class="btnGuardar" />
            </div>
        </div>
    </div>
}

<div>
    @Html.ActionLink("Regresar", "Index", null, new { @class = "regresar" })
</div>

@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
}
